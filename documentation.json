{
    "pipes": [],
    "interfaces": [
        {
            "name": "FirebaseResponseSignin",
            "id": "interface-FirebaseResponseSignin-b6fa066dfa125ed1265c9e863ea8335b2be907ddc9ed8947f92fd880ff21e51dbb82fbec99a46fd0a3ea85292a3c985f167c483caf66e67f7a2f1c5032f1500c",
            "file": "src/app/core/services/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * Represents the payload of the response received when registering a new user in Firebase\n * @see https://firebase.google.com/docs/reference/rest/auth?hl=fr#section-create-email-password\n */\ninterface FirebaseResponseSignup {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n}\n\ninterface FirebaseResponseSignin {\n  kind: string;\n  localId: string;\n  email: string;\n  displayName: string;\n  idToken: string;\n  registered: boolean;\n  refreshToken: string;\n  expiresIn: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  readonly #http = inject(HttpClient);\n\n  register(\n    email: string,\n    password: string,\n  ): Observable<FirebaseResponseSignup> {\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.firebaseConfig.apiKey}`;\n    const payload = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n\n    return this.#http.post<FirebaseResponseSignup>(URL, payload);\n  }\n\n  login(email: string, password: string): Observable<FirebaseResponseSignin> {\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.firebaseConfig.apiKey}`;\n    const payload = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n    return this.#http.post<FirebaseResponseSignin>(URL, payload);\n  }\n\n  save(\n    email: string,\n    userId: string,\n    bearerToken: string,\n  ): Observable<unknown> {\n    const baseUrl = `https://firestore.googleapis.com/v1/projects/${environment.firebaseConfig.projectId}/databases/(default)/documents`;\n    const userFirestoreCollectionId = 'users';\n    const url = `${baseUrl}/${userFirestoreCollectionId}?documentId=${userId}`;\n    const payload = {\n      fields: {\n        id: { stringValue: userId },\n        email: { stringValue: email },\n      },\n    };\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${bearerToken}`,\n    });\n    const options = { headers };\n\n    return this.#http.post<unknown>(url, payload, options);\n  }\n}\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "expiresIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "idToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "kind",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "localId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "registered",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FirebaseResponseSignup",
            "id": "interface-FirebaseResponseSignup-b6fa066dfa125ed1265c9e863ea8335b2be907ddc9ed8947f92fd880ff21e51dbb82fbec99a46fd0a3ea85292a3c985f167c483caf66e67f7a2f1c5032f1500c",
            "file": "src/app/core/services/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * Represents the payload of the response received when registering a new user in Firebase\n * @see https://firebase.google.com/docs/reference/rest/auth?hl=fr#section-create-email-password\n */\ninterface FirebaseResponseSignup {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n}\n\ninterface FirebaseResponseSignin {\n  kind: string;\n  localId: string;\n  email: string;\n  displayName: string;\n  idToken: string;\n  registered: boolean;\n  refreshToken: string;\n  expiresIn: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  readonly #http = inject(HttpClient);\n\n  register(\n    email: string,\n    password: string,\n  ): Observable<FirebaseResponseSignup> {\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.firebaseConfig.apiKey}`;\n    const payload = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n\n    return this.#http.post<FirebaseResponseSignup>(URL, payload);\n  }\n\n  login(email: string, password: string): Observable<FirebaseResponseSignin> {\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.firebaseConfig.apiKey}`;\n    const payload = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n    return this.#http.post<FirebaseResponseSignin>(URL, payload);\n  }\n\n  save(\n    email: string,\n    userId: string,\n    bearerToken: string,\n  ): Observable<unknown> {\n    const baseUrl = `https://firestore.googleapis.com/v1/projects/${environment.firebaseConfig.projectId}/databases/(default)/documents`;\n    const userFirestoreCollectionId = 'users';\n    const url = `${baseUrl}/${userFirestoreCollectionId}?documentId=${userId}`;\n    const payload = {\n      fields: {\n        id: { stringValue: userId },\n        email: { stringValue: email },\n      },\n    };\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${bearerToken}`,\n    });\n    const options = { headers };\n\n    return this.#http.post<unknown>(url, payload, options);\n  }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "expiresIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "idToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "localId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Represents the payload of the response received when registering a new user in Firebase\nSee <a href=\"https://firebase.google.com/docs/reference/rest/auth?hl=fr#section-create-email-password\">https://firebase.google.com/docs/reference/rest/auth?hl=fr#section-create-email-password</a></p>\n",
            "rawdescription": "\n\nRepresents the payload of the response received when registering a new user in Firebase\nSee https://firebase.google.com/docs/reference/rest/auth?hl=fr#section-create-email-password\n",
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-b6fa066dfa125ed1265c9e863ea8335b2be907ddc9ed8947f92fd880ff21e51dbb82fbec99a46fd0a3ea85292a3c985f167c483caf66e67f7a2f1c5032f1500c",
            "file": "src/app/core/services/authentication.service.ts",
            "properties": [
                {
                    "name": "#http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148,
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FirebaseResponseSignin>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FirebaseResponseSignup>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "save",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "bearerToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "userId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "bearerToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n * Represents the payload of the response received when registering a new user in Firebase\n * @see https://firebase.google.com/docs/reference/rest/auth?hl=fr#section-create-email-password\n */\ninterface FirebaseResponseSignup {\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n}\n\ninterface FirebaseResponseSignin {\n  kind: string;\n  localId: string;\n  email: string;\n  displayName: string;\n  idToken: string;\n  registered: boolean;\n  refreshToken: string;\n  expiresIn: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthenticationService {\n  readonly #http = inject(HttpClient);\n\n  register(\n    email: string,\n    password: string,\n  ): Observable<FirebaseResponseSignup> {\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.firebaseConfig.apiKey}`;\n    const payload = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n\n    return this.#http.post<FirebaseResponseSignup>(URL, payload);\n  }\n\n  login(email: string, password: string): Observable<FirebaseResponseSignin> {\n    const URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.firebaseConfig.apiKey}`;\n    const payload = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n    return this.#http.post<FirebaseResponseSignin>(URL, payload);\n  }\n\n  save(\n    email: string,\n    userId: string,\n    bearerToken: string,\n  ): Observable<unknown> {\n    const baseUrl = `https://firestore.googleapis.com/v1/projects/${environment.firebaseConfig.projectId}/databases/(default)/documents`;\n    const userFirestoreCollectionId = 'users';\n    const url = `${baseUrl}/${userFirestoreCollectionId}?documentId=${userId}`;\n    const payload = {\n      fields: {\n        id: { stringValue: userId },\n        email: { stringValue: email },\n      },\n    };\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${bearerToken}`,\n    });\n    const options = { headers };\n\n    return this.#http.post<unknown>(url, payload, options);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-53315cf40832c12b4193fb49475fa6b6fd7ffa452b0e45af3ea3df6e83b4c8b482609db897d0c6209acf31a353d623ce261c597c3c835c361b12572b6108eda6",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "#authenticationService",
                    "defaultValue": "inject(AuthenticationService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        148,
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, inject } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { AuthenticationService } from '@core/services/authentication.service';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  readonly #authenticationService = inject(AuthenticationService);\n\n  onLogin() {\n    this.#authenticationService\n      .login('john.doe@gmail.com', 'qwertz')\n      .pipe(\n        switchMap((response) => {\n          const { email, localId, idToken } = response;\n          return this.#authenticationService.save(email, localId, idToken);\n        }),\n      )\n      .subscribe();\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Hello, productivity-planner</h1>\n\n<button (click)=\"onLogin()\" class=\"btn btn-primary\">Login</button>\n<router-outlet/>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-76534d9c2266790d71bf2b8c4f94e226f270a341f9a0847a999b2c9ee8bafafad234ca9c7feb8554316952f49a6307599716b96907a69c8333004ae05738cfcd",
            "file": "src/app/shared/components/header/header.smart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.smart.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "APP_ROUTES",
                    "defaultValue": "APP_ROUTES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\nimport { APP_ROUTES } from '@core/enums/routes.enum';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterLink],\n  templateUrl: './header.smart.component.html',\n  styleUrl: './header.smart.component.scss',\n})\nexport class HeaderComponent {\n  protected readonly APP_ROUTES = APP_ROUTES;\n}\n",
            "styleUrl": "./header.smart.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav class=\"navbar navbar-expand bg-body-tertiary\">\n  <div class=\"container-fluid\">\n    <div class=\"d-inline-flex\">\n      <a [routerLink]=\"APP_ROUTES.HOME\" class=\"navbar-brand\" data-testId=\"navbarTitle\">Productivity Planner</a>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a [routerLink]=\"APP_ROUTES.HOME\" class=\"nav-link\"  data-testId=\"homeLink\">Accueil</a>\n        </li>\n      </ul>\n    </div>\n\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a [routerLink]=\"APP_ROUTES.LOGIN\" class=\"nav-link\" data-testId=\"loginLink\">Connexion</a>\n      </li>\n      <li class=\"nav-item\">\n        <a [routerLink]=\"APP_ROUTES.SIGNUP\" class=\"nav-link\" data-testId=\"signupLink\">Inscription</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n"
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-559035b3102c0e1fa1df5f4fc0a2dddb13819cbe3928a34454ed49e0c790c386acb7d11a56be503eea4b8abf00239ae1a7dae785f3f87a33500756efb645543a",
            "file": "src/app/visitor/home-page/home-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  standalone: true,\n  imports: [],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.scss',\n})\nexport class HomePageComponent {}\n",
            "styleUrl": "./home-page.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>homepage works!</p>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n  ],\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.dev.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDN2mo47MfAc7rmPsEkkzO9XBWSF4zRCe0',\n    authDomain: 'productivity-planner-dev-41e7e.firebaseapp.com',\n    projectId: 'productivity-planner-dev-41e7e',\n    storageBucket: 'productivity-planner-dev-41e7e.firebasestorage.app',\n    messagingSenderId: '852816215637',\n    appId: '1:852816215637:web:31b6ee30672db453a6dedc',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.staging.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  firebaseConfig: {\n    apiKey: 'AIzaSyAFUI1LuwTYwKEnIKzwIL0EfVrbDrTRbOk',\n    authDomain: 'productivity-planner-sta-4dfab.firebaseapp.com',\n    projectId: 'productivity-planner-sta-4dfab',\n    storageBucket: 'productivity-planner-sta-4dfab.firebasestorage.app',\n    messagingSenderId: '187393531635',\n    appId: '1:187393531635:web:689fb1baa064809893e186',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  firebaseConfig: {\n    apiKey: 'AIzaSyCVfx6g3bvka4rEaWDvt_FUQUCzLbjvko4',\n    authDomain: 'productivity-planner-pro-53ea1.firebaseapp.com',\n    projectId: 'productivity-planner-pro-53ea1',\n    storageBucket: 'productivity-planner-pro-53ea1.firebasestorage.app',\n    messagingSenderId: '594219188364',\n    appId: '1:594219188364:web:1e68d024787d2180187ba9',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "APP_ROUTES",
                "childs": [
                    {
                        "name": "HOME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": ""
                    },
                    {
                        "name": "LOGIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "login"
                    },
                    {
                        "name": "SIGNUP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "signup"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/enums/routes.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideHttpClient(),\n  ],\n}"
                }
            ],
            "src/environments/environment.dev.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.dev.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyDN2mo47MfAc7rmPsEkkzO9XBWSF4zRCe0',\n    authDomain: 'productivity-planner-dev-41e7e.firebaseapp.com',\n    projectId: 'productivity-planner-dev-41e7e',\n    storageBucket: 'productivity-planner-dev-41e7e.firebasestorage.app',\n    messagingSenderId: '852816215637',\n    appId: '1:852816215637:web:31b6ee30672db453a6dedc',\n  },\n}"
                }
            ],
            "src/environments/environment.staging.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.staging.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  firebaseConfig: {\n    apiKey: 'AIzaSyAFUI1LuwTYwKEnIKzwIL0EfVrbDrTRbOk',\n    authDomain: 'productivity-planner-sta-4dfab.firebaseapp.com',\n    projectId: 'productivity-planner-sta-4dfab',\n    storageBucket: 'productivity-planner-sta-4dfab.firebasestorage.app',\n    messagingSenderId: '187393531635',\n    appId: '1:187393531635:web:689fb1baa064809893e186',\n  },\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  firebaseConfig: {\n    apiKey: 'AIzaSyCVfx6g3bvka4rEaWDvt_FUQUCzLbjvko4',\n    authDomain: 'productivity-planner-pro-53ea1.firebaseapp.com',\n    projectId: 'productivity-planner-pro-53ea1',\n    storageBucket: 'productivity-planner-pro-53ea1.firebasestorage.app',\n    messagingSenderId: '594219188364',\n    appId: '1:594219188364:web:1e68d024787d2180187ba9',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/core/enums/routes.enum.ts": [
                {
                    "name": "APP_ROUTES",
                    "childs": [
                        {
                            "name": "HOME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": ""
                        },
                        {
                            "name": "LOGIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "login"
                        },
                        {
                            "name": "SIGNUP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "signup"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/enums/routes.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FirebaseResponseSignin",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FirebaseResponseSignup",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.smart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/visitor/home-page/home-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.dev.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.staging.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}